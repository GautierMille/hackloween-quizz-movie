{"ast":null,"code":"var _jsxFileName = \"/home/gautier/Documents/hackloween-quizz-movie/hackloween/src/components/GetMovie.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport MovieCard from \"./MovieCard\";\nlet sampleMovie = [{\n  id: \"\"\n}, {\n  title: \"\"\n}, {\n  director: \"\"\n}, {\n  year: \"\"\n}, {\n  posterUrl: \"\"\n}];\n\nclass GetMovie extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.checkAnswer = event => {\n      const content = event.target.innerHTML;\n\n      if (content === this.state.movies[this.state.goodAnswer].title) {\n        this.props.incrementScore();\n        this.getMovie();\n        this.goodAnswer();\n        this.props.timeReset();\n      } else {\n        this.props.wrong();\n        this.playFalse();\n      }\n    };\n\n    this.state = {\n      movies: sampleMovie,\n      answers: [sampleMovie, sampleMovie, sampleMovie, sampleMovie],\n      goodAnswer: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getMovie();\n    this.goodAnswer();\n  }\n\n  getMovie() {\n    axios.get(\"https://hackathon-wild-hackoween.herokuapp.com/movies\").then(response => response.data).then(data => {\n      this.setState({\n        movies: data.movies.sort(() => Math.random() - 0.5) //[Math.floor(Math.random() * Math.floor(82))]\n\n      });\n    });\n  }\n\n  goodAnswer() {\n    let response = Math.floor(Math.random() * 3);\n    this.setState({\n      goodAnswer: response\n    });\n  }\n\n  playFalse() {\n    const falseAnswer = new Audio(\"/sounds/wrong.mp3\");\n    falseAnswer.play();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"quizz\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(MovieCard, {\n      posterUrl: this.state.movies[this.state.goodAnswer].posterUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.checkAnswer,\n      className: \"answerCase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.movies[0].title), React.createElement(\"button\", {\n      onClick: this.checkAnswer,\n      className: \"answerCase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.movies[1].title)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.checkAnswer,\n      className: \"answerCase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.movies[2].title), React.createElement(\"button\", {\n      onClick: this.checkAnswer,\n      className: \"answerCase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.movies[3].title))));\n  }\n\n}\n\nexport default GetMovie;\n/*<button>{this.state.movies[0].title}</button>\n        <button>{this.state.movies[1].title}</button>\n        <button>{this.state.movies[2].title}</button>\n        <button>{this.state.movies[3].title}</button>\n      </div>*/","map":{"version":3,"sources":["/home/gautier/Documents/hackloween-quizz-movie/hackloween/src/components/GetMovie.jsx"],"names":["React","axios","MovieCard","sampleMovie","id","title","director","year","posterUrl","GetMovie","Component","constructor","props","checkAnswer","event","content","target","innerHTML","state","movies","goodAnswer","incrementScore","getMovie","timeReset","wrong","playFalse","answers","componentDidMount","get","then","response","data","setState","sort","Math","random","floor","falseAnswer","Audio","play","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport MovieCard from \"./MovieCard\";\n\nlet sampleMovie = [\n  { id: \"\" },\n  { title: \"\" },\n  { director: \"\" },\n  { year: \"\" },\n  { posterUrl: \"\" }\n];\n\nclass GetMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: sampleMovie,\n      answers: [sampleMovie, sampleMovie, sampleMovie, sampleMovie],\n      goodAnswer: 0\n    };\n  }\n  componentDidMount() {\n    this.getMovie();\n    this.goodAnswer();\n  }\n  getMovie() {\n    axios\n      .get(\"https://hackathon-wild-hackoween.herokuapp.com/movies\")\n      .then(response => response.data)\n      .then(data => {\n        this.setState({\n          movies: data.movies.sort(() => Math.random() - 0.5) //[Math.floor(Math.random() * Math.floor(82))]\n        });\n      });\n  }\n\n  goodAnswer() {\n    let response = Math.floor(Math.random() * 3);\n    this.setState({ goodAnswer: response });\n  }\n\n  checkAnswer = event => {\n    const content = event.target.innerHTML;\n    if (content === this.state.movies[this.state.goodAnswer].title) {\n      this.props.incrementScore();\n      this.getMovie();\n      this.goodAnswer();\n      this.props.timeReset();\n    } else {\n      this.props.wrong();\n      this.playFalse();\n    }\n  };\n\n  playFalse() {\n    const falseAnswer = new Audio(\"/sounds/wrong.mp3\");\n    falseAnswer.play();\n  }\n\n  render() {\n    return (\n      <div id=\"quizz\">\n        <MovieCard\n          posterUrl={this.state.movies[this.state.goodAnswer].posterUrl}\n        ></MovieCard>\n\n        <div id=\"answer\">\n          <div>\n            <button onClick={this.checkAnswer} className=\"answerCase\">\n              {this.state.movies[0].title}\n            </button>\n            <button onClick={this.checkAnswer} className=\"answerCase\">\n              {this.state.movies[1].title}\n            </button>\n          </div>\n          <div>\n            <button onClick={this.checkAnswer} className=\"answerCase\">\n              {this.state.movies[2].title}\n            </button>\n            <button onClick={this.checkAnswer} className=\"answerCase\">\n              {this.state.movies[3].title}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default GetMovie;\n\n/*<button>{this.state.movies[0].title}</button>\n        <button>{this.state.movies[1].title}</button>\n        <button>{this.state.movies[2].title}</button>\n        <button>{this.state.movies[3].title}</button>\n      </div>*/\n"]},"metadata":{},"sourceType":"module"}