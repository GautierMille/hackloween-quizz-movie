{"ast":null,"code":"var _jsxFileName = \"/home/gautier/Documents/hackloween-quizz-movie/hackloween/src/components/GetMovie.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport MovieCard from \"./MovieCard\";\nlet sampleMovie = [{\n  id: \"\"\n}, {\n  title: \"\"\n}, {\n  director: \"\"\n}, {\n  year: \"\"\n}, {\n  posterUrl: \"\"\n}];\n\nclass GetMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: sampleMovie,\n      answers: [sampleMovie, sampleMovie, sampleMovie, sampleMovie],\n      answer1: sampleMovie,\n      answer2: sampleMovie,\n      answer3: sampleMovie,\n      answer4: sampleMovie,\n      goodAnswer: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getMovie();\n    this.getAnswers();\n  }\n\n  getMovie() {\n    axios.get(\"https://hackathon-wild-hackoween.herokuapp.com/movies\") // Extract the DATA from the received response\n    .then(response => response.data) // Use this data to update the state\n    .then(data => {\n      this.setState({\n        movies: data.movies[Math.floor(Math.random() * Math.floor(82))]\n      });\n    });\n  }\n\n  getAnswers() {\n    let movie1 = Math.floor(Math.random() * Math.floor(82));\n    let movie2 = Math.floor(Math.random() * Math.floor(82));\n    let movie3 = Math.floor(Math.random() * Math.floor(82));\n    let movie4 = Math.floor(Math.random() * Math.floor(82));\n    axios.get(\"https://hackathon-wild-hackoween.herokuapp.com/movies\") // Extract the DATA from the received response\n    .then(response => response.data) // Use this data to update the state\n    .then(data => {\n      this.setState({\n        answers: [data.movies[movie1], data.movies[movie2], data.movies[movie3], data.movies[movie4]],\n        answer1: data.movies[movie1],\n        answer2: data.movies[movie2],\n        answer3: data.movies[movie3],\n        answer4: data.movies[movie4]\n      });\n    });\n  }\n\n  goodAnswer() {\n    let goodAnswer = 2;\n    /*Math.floor(Math.random() * Math.floor(3)) + 1;*/\n\n    this.setState({\n      goodAnswer\n    });\n  }\n\n  render() {\n    let anwsernumber = 2;\n    console.log(this.state.answers[0]);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(MovieCard, {\n      posterUrl: this.state.answers[0].posterUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.answers[0].title, \"`\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.answers[1].title), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.answers[2].title), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.state.answers[3].title));\n  }\n\n}\n\nexport default GetMovie;","map":{"version":3,"sources":["/home/gautier/Documents/hackloween-quizz-movie/hackloween/src/components/GetMovie.jsx"],"names":["React","axios","MovieCard","sampleMovie","id","title","director","year","posterUrl","GetMovie","Component","constructor","props","state","movies","answers","answer1","answer2","answer3","answer4","goodAnswer","componentDidMount","getMovie","getAnswers","get","then","response","data","setState","Math","floor","random","movie1","movie2","movie3","movie4","render","anwsernumber","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport MovieCard from \"./MovieCard\";\n\nlet sampleMovie = [\n  { id: \"\" },\n  { title: \"\" },\n  { director: \"\" },\n  { year: \"\" },\n  { posterUrl: \"\" }\n];\n\nclass GetMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: sampleMovie,\n      answers: [sampleMovie, sampleMovie, sampleMovie, sampleMovie],\n      answer1: sampleMovie,\n      answer2: sampleMovie,\n      answer3: sampleMovie,\n      answer4: sampleMovie,\n      goodAnswer: 0\n    };\n  }\n  componentDidMount() {\n    this.getMovie();\n    this.getAnswers();\n  }\n  getMovie() {\n    axios\n      .get(\"https://hackathon-wild-hackoween.herokuapp.com/movies\")\n      // Extract the DATA from the received response\n      .then(response => response.data)\n      // Use this data to update the state\n      .then(data => {\n        this.setState({\n          movies: data.movies[Math.floor(Math.random() * Math.floor(82))]\n        });\n      });\n  }\n\n  getAnswers() {\n    let movie1 = Math.floor(Math.random() * Math.floor(82));\n    let movie2 = Math.floor(Math.random() * Math.floor(82));\n    let movie3 = Math.floor(Math.random() * Math.floor(82));\n    let movie4 = Math.floor(Math.random() * Math.floor(82));\n    axios\n      .get(\"https://hackathon-wild-hackoween.herokuapp.com/movies\")\n      // Extract the DATA from the received response\n      .then(response => response.data)\n      // Use this data to update the state\n      .then(data => {\n        this.setState({\n          answers: [\n            data.movies[movie1],\n            data.movies[movie2],\n            data.movies[movie3],\n            data.movies[movie4]\n          ],\n          answer1: data.movies[movie1],\n          answer2: data.movies[movie2],\n          answer3: data.movies[movie3],\n          answer4: data.movies[movie4]\n        });\n      });\n  }\n\n  goodAnswer() {\n    let goodAnswer = 2; /*Math.floor(Math.random() * Math.floor(3)) + 1;*/\n    this.setState({ goodAnswer });\n  }\n\n  render() {\n    let anwsernumber = 2;\n    console.log(this.state.answers[0]);\n    return (\n      <div>\n        <MovieCard posterUrl={this.state.answers[0].posterUrl}></MovieCard>\n        <button>{this.state.answers[0].title}`</button>\n        <button>{this.state.answers[1].title}</button>\n        <button>{this.state.answers[2].title}</button>\n        <button>{this.state.answers[3].title}</button>\n      </div>\n    );\n  }\n}\nexport default GetMovie;\n"]},"metadata":{},"sourceType":"module"}