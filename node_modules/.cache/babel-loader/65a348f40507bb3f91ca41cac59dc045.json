{"ast":null,"code":"var _jsxFileName = \"/home/gautier/Documents/hackloween-quizz-movie/hackloween/src/components/GetMovie.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport MovieCard from \"./MovieCard\";\nlet sampleMovie = [{\n  id: \"\"\n}, {\n  title: \"\"\n}, {\n  director: \"\"\n}, {\n  year: \"\"\n}, {\n  posterUrl: \"\"\n}];\n\nclass GetMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: sampleMovie,\n      answers: [sampleMovie, sampleMovie, sampleMovie, sampleMovie],\n      goodAnswer: 0,\n      questionNumber: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getMovie(); //this.getAnswers();\n\n    this.goodAnswer();\n  }\n\n  getMovie() {\n    axios.get(\"https://hackathon-wild-hackoween.herokuapp.com/movies\") // Extract the DATA from the received response\n    .then(response => response.data) // Use this data to update the state\n    .then(data => {\n      this.setState({\n        movies: data.movies.sort(() => Math.random() - 0.5) //[Math.floor(Math.random() * Math.floor(82))]\n\n      });\n    });\n  }\n  /*getAnswers() {\n    let movie1 = Math.floor(Math.random() * Math.floor(82));\n    let movie2 = Math.floor(Math.random() * Math.floor(82));\n    let movie3 = Math.floor(Math.random() * Math.floor(82));\n    let movie4 = Math.floor(Math.random() * Math.floor(82));\n    axios\n      .get(\"https://hackathon-wild-hackoween.herokuapp.com/movies\")\n      // Extract the DATA from the received response\n      .then(response => response.data)\n      // Use this data to update the state\n      .then(data => {\n        this.setState({\n          answers: [\n            data.movies[movie1],\n            data.movies[movie2],\n            data.movies[movie3],\n            data.movies[movie4]\n          ]\n        });\n      });\n  }*/\n\n\n  goodAnswer() {\n    let response = Math.floor(Math.random() * 3);\n    this.setState({\n      goodAnswer: response\n    });\n    this.setState({\n      questionNumber: this.state.questionNumber + 1\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"quizz\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(MovieCard, {\n      posterUrl: this.state.movies[this.state.goodAnswer].posterUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"answerCase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.movies[0].title), React.createElement(\"button\", {\n      className: \"answerCase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.movies[1].title)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"answerCase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.movies[2].title), React.createElement(\"button\", {\n      className: \"answerCase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.movies[3].title))));\n  }\n\n}\n\nexport default GetMovie;\n/*<button>{this.state.movies[0].title}</button>\n        <button>{this.state.movies[1].title}</button>\n        <button>{this.state.movies[2].title}</button>\n        <button>{this.state.movies[3].title}</button>\n      </div>*/","map":{"version":3,"sources":["/home/gautier/Documents/hackloween-quizz-movie/hackloween/src/components/GetMovie.jsx"],"names":["React","axios","MovieCard","sampleMovie","id","title","director","year","posterUrl","GetMovie","Component","constructor","props","state","movies","answers","goodAnswer","questionNumber","componentDidMount","getMovie","get","then","response","data","setState","sort","Math","random","floor","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport MovieCard from \"./MovieCard\";\n\nlet sampleMovie = [\n  { id: \"\" },\n  { title: \"\" },\n  { director: \"\" },\n  { year: \"\" },\n  { posterUrl: \"\" }\n];\n\nclass GetMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: sampleMovie,\n      answers: [sampleMovie, sampleMovie, sampleMovie, sampleMovie],\n      goodAnswer: 0,\n      questionNumber: 0\n    };\n  }\n  componentDidMount() {\n    this.getMovie();\n    //this.getAnswers();\n    this.goodAnswer();\n  }\n  getMovie() {\n    axios\n      .get(\"https://hackathon-wild-hackoween.herokuapp.com/movies\")\n      // Extract the DATA from the received response\n      .then(response => response.data)\n      // Use this data to update the state\n      .then(data => {\n        this.setState({\n          movies: data.movies.sort(() => Math.random() - 0.5) //[Math.floor(Math.random() * Math.floor(82))]\n        });\n      });\n  }\n\n  /*getAnswers() {\n    let movie1 = Math.floor(Math.random() * Math.floor(82));\n    let movie2 = Math.floor(Math.random() * Math.floor(82));\n    let movie3 = Math.floor(Math.random() * Math.floor(82));\n    let movie4 = Math.floor(Math.random() * Math.floor(82));\n    axios\n      .get(\"https://hackathon-wild-hackoween.herokuapp.com/movies\")\n      // Extract the DATA from the received response\n      .then(response => response.data)\n      // Use this data to update the state\n      .then(data => {\n        this.setState({\n          answers: [\n            data.movies[movie1],\n            data.movies[movie2],\n            data.movies[movie3],\n            data.movies[movie4]\n          ]\n        });\n      });\n  }*/\n  goodAnswer() {\n    let response = Math.floor(Math.random() * 3);\n    this.setState({ goodAnswer: response });\n    this.setState({ questionNumber: this.state.questionNumber + 1 });\n  }\n\n  render() {\n    return (\n      <div id=\"quizz\">\n        <MovieCard\n          posterUrl={this.state.movies[this.state.goodAnswer].posterUrl}\n        ></MovieCard>\n\n        <div id=\"answer\">\n          <div>\n            <button className=\"answerCase\">{this.state.movies[0].title}</button>\n            <button className=\"answerCase\">{this.state.movies[1].title}</button>\n          </div>\n          <div>\n            <button className=\"answerCase\">{this.state.movies[2].title}</button>\n            <button className=\"answerCase\">{this.state.movies[3].title}</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default GetMovie;\n\n/*<button>{this.state.movies[0].title}</button>\n        <button>{this.state.movies[1].title}</button>\n        <button>{this.state.movies[2].title}</button>\n        <button>{this.state.movies[3].title}</button>\n      </div>*/\n"]},"metadata":{},"sourceType":"module"}