{"ast":null,"code":"var _jsxFileName = \"/home/gautier/Documents/hackloween-quizz-movie/hackloween/src/components/LetsPlay.jsx\";\nimport React from \"react\";\nimport NavBar from \"./NavBar\";\nimport \"./style/LetsPlay.scss\";\nimport Countdown from \"./Countdown\";\n\nclass LetsPlay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.incrementScore = () => {\n      this.setState({\n        ScoreCount: this.state.ScoreCount + 1\n      });\n    };\n\n    this.blurFunction = (i, j) => {\n      let arr = this.state.blurTab;\n      arr[i][j] = false;\n      this.setState({\n        blurTab: arr\n      });\n    };\n\n    this.state = {\n      ScoreCount: 0,\n      blurTab: [[true, true, true], [true, true, true], [true, false, true], [true, true, true]]\n    };\n  }\n\n  launchDecount() {\n    for (let k = 2000; k <= 20000; k = k + 2000) {\n      let i = Math.floor(Math.random() * 3);\n      let j = Math.floor(Math.random() * 2);\n      setTimeout(this.blurFunction(i, j), k);\n    }\n  }\n\n  render() {\n    this.launchDecount();\n    return React.createElement(\"div\", {\n      id: \"letsPlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      displayScore: this.state.ScoreCount,\n      Scoring: this.incrementScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Countdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"quizz\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"moviePict\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.blurTab.map(row => row.map(column => {\n      return React.createElement(\"div\", {\n        className: column === true ? \"blur\" : \"noBlur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    }))), React.createElement(\"div\", {\n      id: \"answer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"answerCase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Answer 1\"), React.createElement(\"button\", {\n      className: \"answerCase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Answer 2\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"answerCase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Answer 3\"), React.createElement(\"button\", {\n      className: \"answerCase\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Answer 4\")))));\n  }\n\n}\n\nexport default LetsPlay;","map":{"version":3,"sources":["/home/gautier/Documents/hackloween-quizz-movie/hackloween/src/components/LetsPlay.jsx"],"names":["React","NavBar","Countdown","LetsPlay","Component","constructor","props","incrementScore","setState","ScoreCount","state","blurFunction","i","j","arr","blurTab","launchDecount","k","Math","floor","random","setTimeout","render","map","row","column"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NavBar from \"./NavBar\";\nimport \"./style/LetsPlay.scss\";\nimport Countdown from \"./Countdown\";\n\nclass LetsPlay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ScoreCount: 0,\n      blurTab: [\n        [true, true, true],\n        [true, true, true],\n        [true, false, true],\n        [true, true, true]\n      ]\n    };\n  }\n\n  launchDecount() {\n    for (let k = 2000; k <= 20000; k = k + 2000) {\n      let i = Math.floor(Math.random() * 3);\n      let j = Math.floor(Math.random() * 2);\n      setTimeout(this.blurFunction(i, j), k);\n    }\n  }\n\n  incrementScore = () => {\n    this.setState({ ScoreCount: this.state.ScoreCount + 1 });\n  };\n\n  blurFunction = (i, j) => {\n    let arr = this.state.blurTab;\n    arr[i][j] = false;\n    this.setState({ blurTab: arr });\n  };\n\n  render() {\n    this.launchDecount();\n    return (\n      <div id=\"letsPlay\">\n        <NavBar\n          displayScore={this.state.ScoreCount}\n          Scoring={this.incrementScore}\n        />\n        <Countdown />\n        <div id=\"quizz\">\n          <div id=\"moviePict\">\n            {this.state.blurTab.map(row =>\n              row.map(column => {\n                return (\n                  <div className={column === true ? \"blur\" : \"noBlur\"}></div>\n                );\n              })\n            )}\n          </div>\n          <div id=\"answer\">\n            <div>\n              <button className=\"answerCase\">Answer 1</button>\n              <button className=\"answerCase\">Answer 2</button>\n            </div>\n            <div>\n              <button className=\"answerCase\">Answer 3</button>\n              <button className=\"answerCase\">Answer 4</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LetsPlay;\n"]},"metadata":{},"sourceType":"module"}