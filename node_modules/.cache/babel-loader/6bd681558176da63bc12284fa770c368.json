{"ast":null,"code":"var _jsxFileName = \"/home/gautier/Documents/hackloween-quizz-movie/hackloween/src/components/GetMovie.jsx\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport MovieCard from \"./MovieCard\";\nlet sampleMovie = [{\n  id: \"\"\n}, {\n  title: \"\"\n}, {\n  director: \"\"\n}, {\n  year: \"\"\n}, {\n  posterUrl: \"\"\n}];\n\nclass GetMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: sampleMovie,\n      answer1: sampleMovie,\n      answer2: sampleMovie,\n      answer3: sampleMovie,\n      answer4: sampleMovie,\n      goodAnswer: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getMovie();\n    this.getAnswers();\n  }\n\n  getMovie() {\n    axios.get(\"https://hackathon-wild-hackoween.herokuapp.com/movies\") // Extract the DATA from the received response\n    .then(response => response.data) // Use this data to update the state\n    .then(data => {\n      this.setState({\n        movies: data.movies[Math.floor(Math.random() * Math.floor(82))]\n      });\n    });\n  }\n\n  getAnswers() {\n    let movie1 = Math.floor(Math.random() * Math.floor(82));\n    let movie2 = Math.floor(Math.random() * Math.floor(82));\n    let movie3 = Math.floor(Math.random() * Math.floor(82));\n    let movie4 = Math.floor(Math.random() * Math.floor(82));\n    let goodAnswer = Math.floor(Math.random() * Math.floor(3)) + 1;\n    axios.get(\"https://hackathon-wild-hackoween.herokuapp.com/movies\") // Extract the DATA from the received response\n    .then(response => response.data) // Use this data to update the state\n    .then(data => {\n      this.setState({\n        firstAnswer: data.movies[movie1],\n        secondAnswer: data.movies[movie2],\n        thirdAnswer: data.movies[movie3],\n        fourthAnswer: data.movies[movie4]\n      });\n      this.setState({\n        goodAnswer\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(MovieCard, {\n      posterUrl: this.state.movies.posterUrl,\n      title: this.state.movies.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.answer1.title, \"`\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.state.answer2.title), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.answer3.title), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.state.answer4.title));\n  }\n\n}\n\nexport default GetMovie;","map":{"version":3,"sources":["/home/gautier/Documents/hackloween-quizz-movie/hackloween/src/components/GetMovie.jsx"],"names":["React","axios","MovieCard","sampleMovie","id","title","director","year","posterUrl","GetMovie","Component","constructor","props","state","movies","answer1","answer2","answer3","answer4","goodAnswer","componentDidMount","getMovie","getAnswers","get","then","response","data","setState","Math","floor","random","movie1","movie2","movie3","movie4","firstAnswer","secondAnswer","thirdAnswer","fourthAnswer","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport MovieCard from \"./MovieCard\";\n\nlet sampleMovie = [\n  { id: \"\" },\n  { title: \"\" },\n  { director: \"\" },\n  { year: \"\" },\n  { posterUrl: \"\" }\n];\n\nclass GetMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: sampleMovie,\n      answer1: sampleMovie,\n      answer2: sampleMovie,\n      answer3: sampleMovie,\n      answer4: sampleMovie,\n      goodAnswer: 0\n    };\n  }\n  componentDidMount() {\n    this.getMovie();\n    this.getAnswers();\n  }\n  getMovie() {\n    axios\n      .get(\"https://hackathon-wild-hackoween.herokuapp.com/movies\")\n      // Extract the DATA from the received response\n      .then(response => response.data)\n      // Use this data to update the state\n      .then(data => {\n        this.setState({\n          movies: data.movies[Math.floor(Math.random() * Math.floor(82))]\n        });\n      });\n  }\n\n  getAnswers() {\n    let movie1 = Math.floor(Math.random() * Math.floor(82));\n    let movie2 = Math.floor(Math.random() * Math.floor(82));\n    let movie3 = Math.floor(Math.random() * Math.floor(82));\n    let movie4 = Math.floor(Math.random() * Math.floor(82));\n    let goodAnswer = Math.floor(Math.random() * Math.floor(3)) + 1;\n    axios\n      .get(\"https://hackathon-wild-hackoween.herokuapp.com/movies\")\n      // Extract the DATA from the received response\n      .then(response => response.data)\n      // Use this data to update the state\n      .then(data => {\n        this.setState({\n          firstAnswer: data.movies[movie1],\n          secondAnswer: data.movies[movie2],\n          thirdAnswer: data.movies[movie3],\n          fourthAnswer: data.movies[movie4]\n        });\n        this.setState({ goodAnswer });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <MovieCard\n          posterUrl={this.state.movies.posterUrl}\n          title={this.state.movies.title}\n        ></MovieCard>\n        <button>{this.state.answer1.title}`</button>\n        <button>{this.state.answer2.title}</button>\n        <button>{this.state.answer3.title}</button>\n        <button>{this.state.answer4.title}</button>\n      </div>\n    );\n  }\n}\nexport default GetMovie;\n"]},"metadata":{},"sourceType":"module"}