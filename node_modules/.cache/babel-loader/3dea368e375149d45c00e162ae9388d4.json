{"ast":null,"code":"var _jsxFileName = \"/home/gautier/Documents/hackloween-quizz-movie/hackloween/src/components/LetsPlay.jsx\";\nimport React from \"react\";\nimport NavBar from \"./NavBar\";\nimport \"./style/LetsPlay.scss\";\nimport GetMovie from \"./GetMovie\";\n\nclass LetsPlay extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.time = () => {\n      if (this.state.count <= 0) {\n        clearInterval(this.counterFunc);\n        return;\n      }\n\n      this.setState({\n        count: this.state.count - 1\n      });\n    };\n\n    this.incrementScore = () => {\n      this.setState({\n        ScoreCount: this.state.ScoreCount + this.state.count\n      });\n    };\n\n    this.blurFunction = (i, j) => {\n      let arr = this.state.blurTab;\n      arr[i][j] = false;\n      this.setState({\n        blurTab: arr\n      });\n      console.log(i, j);\n    };\n\n    this.state = {\n      ScoreCount: 0,\n      blurTab: [[true, true, true], [true, true, true], [true, false, true], [true, true, true]],\n      count: 20\n    };\n    this.counterFunc = setInterval(this.time, 1000);\n  }\n\n  componentDidMount() {\n    for (let k = 2000; k <= 20000; k = k + 2000) {\n      setTimeout(() => {\n        let i = Math.floor(Math.random() * 4);\n        let j = Math.floor(Math.random() * 3);\n        this.blurFunction(i, j);\n      }, k);\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"letsPlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      displayScore: this.state.ScoreCount,\n      Scoring: this.incrementScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"Countdown\",\n      onClick: () => {\n        this.incrementScore();\n      },\n      id: \"\".concat(this.state.count) <= 5 ? \"blabla\" : \"count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Remaining time\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), \" \", this.state.count), React.createElement(\"div\", {\n      id: \"quizz\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"moviePict\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.blurTab.map(row => row.map(column => {\n      return React.createElement(\"div\", {\n        className: column === true ? \"blur\" : \"noBlur\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    })), React.createElement(GetMovie, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default LetsPlay;","map":{"version":3,"sources":["/home/gautier/Documents/hackloween-quizz-movie/hackloween/src/components/LetsPlay.jsx"],"names":["React","NavBar","GetMovie","LetsPlay","Component","constructor","props","time","state","count","clearInterval","counterFunc","setState","incrementScore","ScoreCount","blurFunction","i","j","arr","blurTab","console","log","setInterval","componentDidMount","k","setTimeout","Math","floor","random","render","map","row","column"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport NavBar from \"./NavBar\";\nimport \"./style/LetsPlay.scss\";\nimport GetMovie from \"./GetMovie\";\n\nclass LetsPlay extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ScoreCount: 0,\n\n      blurTab: [\n        [true, true, true],\n        [true, true, true],\n        [true, false, true],\n        [true, true, true]\n      ],\n      count: 20\n    };\n    this.counterFunc = setInterval(this.time, 1000);\n  }\n\n  componentDidMount() {\n    for (let k = 2000; k <= 20000; k = k + 2000) {\n      setTimeout(() => {\n        let i = Math.floor(Math.random() * 4);\n        let j = Math.floor(Math.random() * 3);\n        this.blurFunction(i, j);\n      }, k);\n    }\n  }\n\n  time = () => {\n    if (this.state.count <= 0) {\n      clearInterval(this.counterFunc);\n      return;\n    }\n    this.setState({ count: this.state.count - 1 });\n  };\n\n  incrementScore = () => {\n    this.setState({\n      ScoreCount: this.state.ScoreCount + this.state.count\n    });\n  };\n\n  blurFunction = (i, j) => {\n    let arr = this.state.blurTab;\n    arr[i][j] = false;\n    this.setState({ blurTab: arr });\n    console.log(i, j);\n  };\n\n  render() {\n    return (\n      <div id=\"letsPlay\">\n        <NavBar\n          displayScore={this.state.ScoreCount}\n          Scoring={this.incrementScore}\n        />\n        <p\n          id=\"Countdown\"\n          onClick={() => {\n            this.incrementScore();\n          }}\n          id={`${this.state.count}` <= 5 ? \"blabla\" : \"count\"}\n        >\n          Remaining time\n          <br /> {this.state.count}\n        </p>\n\n        <div id=\"quizz\">\n          <div id=\"moviePict\">\n            {this.state.blurTab.map(row =>\n              row.map(column => {\n                return (\n                  <div className={column === true ? \"blur\" : \"noBlur\"}></div>\n                );\n              })\n            )}\n            <GetMovie />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LetsPlay;\n"]},"metadata":{},"sourceType":"module"}